// Example of executing this service script:
// on Linux: ./obix.sh tests/se_service_script_example.osc argument_1 argument_2 'argument with spaces'
// on Windows: obix tests\se_service_script_example.osc argument_1 argument_2 "argument with spaces"

service sitemap_creator

	command run
		in command_line_arguments type:indexed_string_list voidable:yes end
		in error_handler type:system_error_handler default:se_system_utilities.default_system_error_handler end
		
		out result type:any_type voidable:yes end
		out error type:system_error voidable:yes end
		out_check check: not ( i_result #r void and i_error #r void ) end
		
		script
			const directory obix_website_directory = fa_directory.create ( '''F:\work\projects\obix\02_working\projects\pr_obix_web_site\work\web\'''~ )
			const file sitemap_file = fa_file.create_from_directory_and_name ( &
				directory = c_obix_website_directory &
				name = fa_file_name.create ( "sitemap.xml"~ ) )
			const file_string_writer writer = fa_file_string_writer.create ( &
				file = c_sitemap_file &
				character_set = se_character_set_constants.UTF_8 )
			const string domain = '''http://www.rps-obix.com/'''
			
			c_writer.write ( string = '''<?xml version="1.0" encoding="UTF-8"?>
<urlset
    xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
''' )
			co_write_entry ( &
				writer = c_writer &
				url = c_domain &
				last_modif = se_date_time.current_local_date_time &
				priority = void )

			repeat for each file file in c_obix_website_directory.file_list ( include_child_directories = yes )
				const string_value file_name_extension = c_file.name.extension.value.to_lower_case
				// if not ( c_file_name_extension =v "html"~ or c_file_name_extension =v "htm"~ ) then
				if not ( c_file_name_extension =v "html"~ ) then
					if c_file_name_extension =v "htm"~ then
						se_system.out.write_line ( string = """File '{{c_file.name}}' is skipped (because .htm).""" )
					end if
					next repeat
				end if
				
				const relative_file relative_file = c_file.make_relative_file ( c_obix_website_directory )
				
				var string priority = void
				if c_relative_file.value =v "index.html"~ or &
					c_relative_file.value =v '''about\faq.html'''~ or &
					c_relative_file.value =v '''docs\manuals\why_obix.html'''~ then
					v_priority = '''<priority>1.0</priority>'''
				end if
				
				co_write_entry ( &
					writer = c_writer &
					url = c_domain & c_relative_file.to_string.replace_all ( to_replace = "\\" replace_by = "/" ) &
					last_modif = c_file.time_last_modified &
					priority = v_priority )
			end

			c_writer.write ( string = '''</urlset>''' )
			
			c_writer.close
			
			se_system.out.write_line ( string = """Sitemap has been stored to file
{{c_sitemap_file}}""" )
		end
	end
	
	command write_entry
		in writer type:simple_string_writer end
		in url type:string end
		in last_modif type:local_date_time end
		in priority type:string voidable:yes end
		
		script
			i_writer.write ( string = """   <url>
      <loc>{{i_url}}</loc>
      <lastmod>{{i_last_modif.date}}T{{i_last_modif.time}}+07:00</lastmod>{{iif i_priority #r void then se_string.current_OS_new_line.to_string & "      " & i_priority else se_string.empty end if}}
   </url>
""" )
//      <changefreq>monthly</changefreq>
//      <priority>0.8</priority>
		end
	end
end